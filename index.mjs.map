{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( '@stdlib/assert-is-array' );\nvar array2buffer = require( '@stdlib/buffer-from-array' );\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized `Buffer`.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|Buffer)} value or Buffer\n*\n* @example\n* var parseJSON = require( '@stdlib/utils-parse-json' );\n*\n* var str = '{\"type\":\"Buffer\",\"data\":[5,3]}';\n*\n* var buf = parseJSON( str, reviver );\n* // returns <Buffer>[ 5, 3 ]\n*/\nfunction reviver( key, value ) {\n\tif (\n\t\tvalue &&\n\t\tvalue.type === 'Buffer' &&\n\t\tisArray( value.data )\n\t) {\n\t\treturn array2buffer( value.data );\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reviver;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Revive a JSON-serialized `Buffer`.\n*\n* @module @stdlib/buffer-reviver\n*\n* @example\n* var parseJSON = require( '@stdlib/utils-parse-json' );\n* var reviver = require( '@stdlib/buffer-reviver' );\n*\n* var str = '{\"type\":\"Buffer\",\"data\":[5,3]}';\n*\n* var buf = parseJSON( str, reviver );\n* // returns <Buffer>[ 5, 3 ]\n*/\n\n// MODULES //\n\nvar reviver = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = reviver;\n"],"names":["isArray","require$$0","array2buffer","require$$1","lib","key","value","type","data"],"mappings":";;wKAsBA,IAAIA,EAAUC,EACVC,EAAeC,EAkCnB,ICfAC,EDCA,SAAkBC,EAAKC,GACtB,OACCA,GACe,WAAfA,EAAMC,MACNP,EAASM,EAAME,MAERN,EAAcI,EAAME,MAErBF"}